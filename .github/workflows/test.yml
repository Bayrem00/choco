name: Chocolatey Integration Tests

on:
  schedule:
    # Run at 10:47pm, at a random  minute to reduce load on GH Actions
    - cron:  '47 22 * * *'
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Build and test using mono on Ubuntu
  ubuntu-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build with Mono
      run: |
        chmod +x build.sh
        $GITHUB_WORKSPACE//build.sh -v
    - name: Test with Nunit on Mono
      run: $GITHUB_WORKSPACE//test.sh integration
    - name: Upload Ubuntu build results
      uses: actions/upload-artifact@v2
      # Always upload build results
      if: ${{ always() }}
      with:
        name: ubuntu-build-results
        path: |
          build_output/build_artifacts/tests/index.html
          build_output/_BuildInfo.xml
          build_output/build.log    
  # Build and test on Windows
  windows-build:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Build with .Net Framework
      run: .\build.bat -v
    - name: Test with Nunit on .Net Framework
      run: .\test.bat integration
    - name: Upload Windows build results
      uses: actions/upload-artifact@v2
      # Always upload build results
      if: ${{ always() }}
      with:
        name: windows-build-results
        path: |
          build_output\build_artifacts\tests\index.html
          build_output\build_artifacts\codecoverage\Html\index.htm
          build_output\_BuildInfo.xml
          build_output\build.log
          code_drop\build_artifacts\ilmerge\ilmerge.log
          code_drop\build_artifacts\ilmerge\ilmergedll.log
    - name: Upload Windows build .nupkg
      uses: actions/upload-artifact@v2
      with:
        name: windows-build-nupkg
        path: code_drop\nuget\*.nupkg
  # Build and test using mono on MacOS
  macos-build:
    runs-on: macos-latest
    steps:
     - uses: actions/checkout@v2
     - name: Build with Mono
       run: |
          chmod +x build.sh
          $GITHUB_WORKSPACE//build.sh -v
     - name: Test with Nunit on Mono
       run: $GITHUB_WORKSPACE//test.sh integration
     - name: Upload MacOS build results
       uses: actions/upload-artifact@v2
       # Always upload build results
       if: ${{ always() }}
       with:
         name: macos-build-results
         path: |
           build_output/build_artifacts/tests/index.html
           build_output/_BuildInfo.xml
           build_output/build.log
  # Build using Mono in Docker on Ubuntu
  docker-build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.linux
          push: false
          tags: chocolatey/choco:latest